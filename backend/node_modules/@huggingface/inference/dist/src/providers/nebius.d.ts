import type { BodyParams, UrlParams } from "../types";
import { BaseConversationalTask, BaseTextGenerationTask, TaskProviderHelper, type TextToImageTaskHelper } from "./providerHelper";
interface NebiusBase64ImageGeneration {
    data: Array<{
        b64_json: string;
    }>;
}
export declare class NebiusConversationalTask extends BaseConversationalTask {
    constructor();
}
export declare class NebiusTextGenerationTask extends BaseTextGenerationTask {
    constructor();
}
export declare class NebiusTextToImageTask extends TaskProviderHelper implements TextToImageTaskHelper {
    constructor();
    preparePayload(params: BodyParams): Record<string, unknown>;
    makeRoute(params: UrlParams): string;
    getResponse(response: NebiusBase64ImageGeneration, url?: string, headers?: HeadersInit, outputType?: "url" | "blob"): Promise<string | Blob>;
}
export {};
//# sourceMappingURL=nebius.d.ts.map